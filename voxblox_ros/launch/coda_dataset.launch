<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="run_name" default="coda" />
  <arg name="process_every_nth_frame" default="1" />
  <arg name="voxel_size" default="0.1" />
  <arg name="scale" default="0.25" />
  <arg name="use_sparsity_compensation" default="true" />
  <arg name="sparsity" default="0.0" />
  <arg name="use_laser" default="true" />
  <arg name="namespace" default="" />

  <node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" output="screen" args="-alsologtostderr" clear_params="true">
    <remap from="pointcloud" to="/ouster/points" if="$(arg use_laser)" />
    <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
    <param name="tsdf_voxels_per_side" value="16" />
    <param name="voxel_carving_enabled" value="true" />
    <param name="color_mode" value="normals" if="$(arg use_laser)" />
    <param name="use_tf_transforms" value="true" />
    <param name="enable_icp" value="false" />
    <param name="icp_iterations" value="10" />
    <param name="verbose" value="true" />
    <param name="update_mesh_every_n_sec" value="0.2" />
    <param name="max_ray_length_m" value="25.0" />
    <param name="min_time_between_msgs_sec" value="0.2" />
    <param name="slice_level" value="1.0" />
    <param name="method" value="fast" />
    <param name="use_const_weight" value="true" />
    <param name="generate_mesh" value="true" />
    <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/sparse_$(arg sparsity)/$(arg run_name).ply" />
    <param name="publish_pointclouds" value="true" />

    <param name="use_sparsity_compensation_factor" value="$(arg use_sparsity_compensation)" />
    <!-- <param name="sparsity_compensation_factor" value="5.0" /> -->
    <param name="sparsity_compensation_factor" value="$(arg sparsity)" /> 
    <param name="use_weight_dropoff" value="false" />
  </node>

</launch>
